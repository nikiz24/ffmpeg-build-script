name: Legacy Build Test (Disabled)

# 此工作流程已停用，请使用 build-mac-linux.yml
on:
  # 禁用所有自动触发，只允许手动触发用于测试
  workflow_dispatch:
    inputs:
      legacy_test:
        description: 'Run legacy test build (not recommended)'
        required: true
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

jobs:
  build-linux:
    name: build in native linux (Legacy)
    runs-on: ubuntu-24.04
    if: ${{ github.event.inputs.legacy_test == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: install libva-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libva-dev

      - name: build ffmpeg
        run: |
          while sleep 300; do echo "=====[ $SECONDS seconds still running ]====="; done &
          SKIPINSTALL=yes VERBOSE=yes SKIPRAV1E=yes ./build-ffmpeg --build --enable-gpl-and-non-free
          kill %1
      - name: check shared library
        run: |
          ldd ./workspace/bin/ffmpeg
      - name: test run ffmepg
        run: |
          ./workspace/bin/ffmpeg -buildconf
      - name: clean up
        run: |
          ./build-ffmpeg --cleanup

  build-macos:
    name: build in native macOS (Legacy)
    runs-on: macos-15
    if: ${{ github.event.inputs.legacy_test == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: build ffmpeg
        run: |
          while sleep 300; do echo "=====[ $SECONDS seconds still running ]====="; done &
          SKIPINSTALL=yes VERBOSE=yes ./build-ffmpeg --build
          kill %1
      - name: check shared library
        run: |
          otool -L ./workspace/bin/ffmpeg
      - name: test run ffmepg
        run: |
          ./workspace/bin/ffmpeg -buildconf
      - name: clean up
        run: |
          ./build-ffmpeg --cleanup

  build-docker:
    name: build in docker (Legacy)
    runs-on: ubuntu-24.04
    if: ${{ github.event.inputs.legacy_test == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: pull base image
        id: ubuntu_pull
        run: |
          docker pull ubuntu:24.04
      - name: run if ubuntu_pull failed
        if: failure() && steps.ubuntu_pull.outcome == 'failure'
        run: |
          docker pull ubuntu:24.04
      - name: build ffmpeg
        run: |
          docker build -t ffmpeg:ubuntu -f Dockerfile .
      - name: test run ffmepg
        run: |
          docker run --rm ffmpeg:ubuntu -buildconf

  build-cuda-ubuntu-docker:
    name: build in ubuntu docker with cuda (Legacy)
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.legacy_test == 'true' }}
    steps:
      - name: Free up disk space
        run: |
          rm -rf /usr/share/dotnet && rm -rf /opt/ghc && rm -rf "/usr/local/share/boost"
          rm -rf /opt/hostedtoolcache && cd /opt && find . -maxdepth 1 -mindepth 1 '!' -path ./containerd '!' -path ./actionarchivecache '!' -path ./runner '!' -path ./runner-cache -exec rm -rf '{}' ';'
          docker system prune -af
      - name: Checkout code
        uses: actions/checkout@v4
      - name: pull base image
        id: cuda_ubuntu_pull
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
          docker pull ubuntu:22.04
      - name: run if cuda_ubuntu_pull failed
        if: failure() && steps.cuda_ubuntu_pull.outcome == 'failure'
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
          docker pull ubuntu:22.04
      - name: build ffmpeg
        run: |
          docker build -t ffmpeg:cuda-ubuntu -f cuda-ubuntu.dockerfile .
      - name: test run ffmepg
        run: |
          docker run --rm ffmpeg:cuda-ubuntu -buildconf

  build-full-static:
    name: full static build in docker (Legacy)
    runs-on: ubuntu-22.04
    if: ${{ github.event.inputs.legacy_test == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: pull base image
        id: cuda_ubuntu_pull
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
      - name: run if cuda_ubuntu_pull failed
        if: failure() && steps.cuda_ubuntu_pull.outcome == 'failure'
        run: |
          docker pull nvidia/cuda:12.6.2-devel-ubuntu22.04
      - name: build ffmpeg
        run: |
          docker build -t ffmpeg:cuda-static -f full-static.dockerfile .
      - name: test run ffmepg
        run: |
          docker run --rm ffmpeg:cuda-static -buildconf
